@model AlcaldiaFront.DTOs.EmpleadoDTOs.EmpleadoRespuestaDTo

@{
    ViewData["Title"] = "Detalles del Empleado";
    Dictionary<int, string> municipioNombres = ViewBag.MunicipioNombres as Dictionary<int, string>;
    Dictionary<int, string> cargoNombres = ViewBag.CargoNombres as Dictionary<int, string>;
    // Mapeo simple de estado a clase de Bootstrap para los badges
    string GetBadgeClass(string estado) => estado?.ToLower() switch
    {
        "activo" => "success",
        "de licencia" => "info",
        "inactivo" => "danger",
        _ => "secondary"
    };
}

<style>
    /* --------------------------------------------------
           PATRÓN DE COLORES FORMAL ADAPTADO A VISTAS DE DETALLE
           -------------------------------------------------- */
    :root {
        --color-primario: #34495e; /* Azul Marino/Antracita */
        --color-secundario: #f39c12; /* Dorado/Naranja - Acento */
        --color-texto-claro: #7f8c8d;
    }

    /* Contenedor principal de detalles (Tarjeta de resumen) */
    .details-card {
        background-color: white;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
        border-top: 5px solid var(--color-secundario); /* Borde de acento */
    }

    /* Encabezado principal */
    h1 {
        color: var(--color-primario);
        margin-bottom: 5px;
        font-weight: 600;
    }

    /* Título de la sección de datos */
    h4 {
        color: var(--color-texto-claro);
        font-weight: 400;
    }

    /* Lista de Detalles (dl) */
    .dl-detalle dt {
        color: var(--color-primario); /* Etiquetas en color primario */
        font-weight: 700;
        text-transform: uppercase;
        font-size: 0.9rem;
        padding-top: 10px;
    }

    .dl-detalle dd {
        margin-bottom: 5px;
        border-bottom: 1px dashed #ecf0f1; /* Línea suave para separar */
        padding-bottom: 5px;
        word-wrap: break-word;
    }

    /* Botón Editar (Primario/Antracita) */
    .btn-primary {
        background-color: var(--color-primario);
        border-color: var(--color-primario);
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #4b6279;
            border-color: #4b6279;
        }

    /* Botón Eliminar (Rojo de peligro) */
    .btn-danger {
        background-color: #c0392b;
        border-color: #c0392b;
    }

        .btn-danger:hover {
            background-color: #e74c3c;
            border-color: #e74c3c;
        }

    /* Botón Volver (Secundario) */
    .btn-secondary {
        background-color: #bdc3c7;
        border-color: #bdc3c7;
        color: var(--color-primario);
    }

        .btn-secondary:hover {
            background-color: #95a5a6;
            border-color: #95a5a6;
        }

    .action-bar {
        margin-top: 30px;
        padding-top: 20px;
        border-top: 1px solid #ecf0f1;
    }
</style>

<div class="details-card">
    <h1><i class="fas fa-user-circle"></i> Detalles del Empleado</h1>
    <h4>Información Personal y Laboral</h4>
    <hr />

    <dl class="row dl-detalle">
        <dt class="col-sm-4 col-md-3">
            Nombre empleado
        </dt>
        <dd class="col-sm-8 col-md-9">
            <h5 class="mb-0">@Html.DisplayFor(model => model.Nombre)</h5>
        </dd>

        <dt class="col-sm-4 col-md-3">
            Apellido empleado
        </dt>
        <dd class="col-sm-8 col-md-9">
            <h5 class="mb-0">@Html.DisplayFor(model => model.Apellido)</h5>
        </dd>

        <dt class="col-sm-4 col-md-3">
            Fecha de contratacion
        </dt>
        <dd class="col-sm-8 col-md-9">
            <i class="far fa-calendar-alt"></i> @Html.DisplayFor(model => model.Fecha_contratacion)
        </dd>

        <dt class="col-sm-4 col-md-3">
            Estado
        </dt>
        <dd class="col-sm-8 col-md-9">
            @{
                string badgeClass = GetBadgeClass(Model?.Estado);
            }
            <span class="badge bg-@badgeClass badge-lg">
                @Html.DisplayFor(model => model.Estado)
            </span>
        </dd>

        <dt class="col-sm-4 col-md-3">
            Cargo
        </dt>
        <dd class="col-sm-9">
            @{
                string nombreCargo = "ID de Municipio no encontrado";
                if (cargoNombres != null && cargoNombres.ContainsKey(Model.MunicipioId))
                {
                    nombreCargo = cargoNombres[Model.MunicipioId];
                }
            }
            <strong class="text-primary">@nombreCargo</strong>

            @* <small class="text-muted">(ID: @Model.MunicipioId)</small> *@
        </dd>

        <dt class="col-sm-4 col-md-3">
            Municipio
        </dt>
        <dd class="col-sm-9">
            @{
                string nombreMunicipio = "ID de Municipio no encontrado";
                if (municipioNombres != null && municipioNombres.ContainsKey(Model.MunicipioId))
                {
                    nombreMunicipio = municipioNombres[Model.MunicipioId];
                }
            }
            <strong class="text-primary">@nombreMunicipio</strong>

            @* <small class="text-muted">(ID: @Model.MunicipioId)</small> *@
        </dd>
    </dl>
</div>

<div class="action-bar">
    <a asp-action="Edit" asp-route-id="@Model?.Id_empleado" class="btn btn-primary"><i class="fas fa-edit"></i> Editar</a>
    <a asp-action="Delete" asp-route-id="@Model?.Id_empleado" class="btn btn-danger"><i class="fas fa-trash-alt"></i> Eliminar</a>
    <a asp-action="Index" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Volver a la Lista</a>
</div>