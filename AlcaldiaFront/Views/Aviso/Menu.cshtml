@model IEnumerable<AlcaldiaFront.DTOs.AvisoDTOs.AvisoRespuestaDTO>
@using System.Collections.Generic
@{
    ViewData["Title"] = "Listado de Avisos";
    Dictionary<int, string> municipioNombres = ViewBag.MunicipioNombres as Dictionary<int, string>;

    // Función para mapear tipo a color de badge
    string GetBadgeClass(string tipo) => tipo?.ToLower() switch
    {
        "climatico" => "success",
        "festivo" => "primary",
        "educativo" => "info",
        "otro" => "danger",
        _ => "secondary"
    };
}

<style>
    /* --------------------------------------------------
        /* PATRÓN DE COLORES FORMAL (Antracita/Dorado) */
    /* -------------------------------------------------- */
    :root {
        --color-primario: #34495e; /* Azul Marino/Antracita */
        --color-secundario: #f39c12; /* Dorado/Naranja - Acento */
        --color-fondo-claro: #ecf0f1;
        --color-texto: #2c3e50;
    }

    /* Contenedor principal de la lista */
    .data-card {
        background-color: white;
        padding: 30px; /* Mantener un buen padding exterior */
        border-radius: 8px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        /* Se eliminó min-height para que se ajuste al contenido */
    }

    h1 {
        color: var(--color-primario);
        border-left: 5px solid var(--color-secundario);
        padding-left: 15px;
        margin-bottom: 20px; /* Reducción de margen */
    }

    .btn-primary {
        background-color: var(--color-primario);
        border-color: var(--color-primario);
    }

        .btn-primary:hover {
            background-color: #4b6279;
            border-color: #4b6279;
        }

    /* -------------------------------------------------- */
    /* ESTILOS DEL CARRUSEL DE AVISOS (Similar a la tarjeta Create) */
    /* -------------------------------------------------- */

    /* Tarjeta individual del aviso (Aplica estilo de 'form-container') */
    .aviso-card {
        background-color: white; /* Blanco, como el form-container */
        border: none;
        border-radius: 10px;
        padding: 25px; /* Reducir padding interior */
        min-height: 320px; /* Altura mínima para asegurar espacio */
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        /* Estilo de sombra de Create */
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin: 10px; /* Espacio alrededor de la tarjeta dentro del carrusel */
    }

        /* Título del aviso */
        .aviso-card h3 {
            color: var(--color-primario);
            font-weight: 700;
            border-bottom: 2px solid var(--color-secundario);
            padding-bottom: 8px; /* Reducir padding */
            margin-bottom: 15px;
            font-size: 1.5rem;
        }

        .aviso-card .lead {
            margin-bottom: 15px;
            line-height: 1.4;
        }

    /* Controles (flechas) del carrusel: Hacerlas más discretas */
    .carousel-control-prev, .carousel-control-next {
        width: 5%; /* Reducir el área de click del control */
        opacity: 0.8;
    }

    .carousel-control-prev-icon, .carousel-control-next-icon {
        background-color: var(--color-primario);
        border-radius: 50%;
        padding: 10px;
        transition: background-color 0.3s;
    }

        .carousel-control-prev-icon:hover, .carousel-control-next-icon:hover {
            background-color: var(--color-secundario); /* Acento al pasar el mouse */
        }

    .carousel-indicators {
        bottom: -20px; /* Mover indicadores más cerca de la tarjeta */
    }

        .carousel-indicators button {
            background-color: var(--color-secundario) !important;
            height: 8px; /* Reducir tamaño del indicador */
            width: 8px;
        }

    .badge-aviso {
        font-size: 0.85rem;
        padding: 6px 10px;
        font-weight: 500;
    }

</style>

<div class="data-card container">

    <h1><i class="fas fa-bullhorn text-secondary"></i> @ViewData["Title"]</h1>
    <p class="mb-4">
        <a asp-controller="Home" asp-action="Index" class="btn btn-primary"><i class="fas fa-arrow-left"></i> Volver al menú</a>
    </p>

    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.Error
        </div>
    }

    @if (Model != null && Model.Any())
    {
        <div id="avisoCarousel" class="carousel slide" data-bs-ride="carousel">

            <div class="carousel-indicators">
                @{
                    int indicatorIndex = 0;
                    foreach (var item in Model)
                    {
                        <button type="button"
                                data-bs-target="#avisoCarousel"
                                data-bs-slide-to="@indicatorIndex"
                                class="@(indicatorIndex == 0 ? "active" : "")"
                                aria-current="@(indicatorIndex == 0 ? "true" : "false")"
                                aria-label="Slide @(indicatorIndex + 1)"></button>
                        indicatorIndex++;
                    }
                }
            </div>

            <div class="carousel-inner p-3">
                @{
                    int itemIndex = 0;
                    foreach (var item in Model.OrderByDescending(a => a.Fecha_Registro))
                    {
                        <div class="carousel-item @(itemIndex == 0 ? "active" : "")">

                            <div class="aviso-card">
                                <h3>@Html.DisplayFor(modelItem => item.Titulo)</h3>

                                <div class="row g-3 mb-3">
                                    <div class="col-md-6">
                                        <p class="mb-1"><strong><i class="fas fa-calendar-alt"></i> Fecha:</strong> @item.Fecha_Registro.ToString("dd MMMM yyyy")</p>
                                    </div>
                                    <div class="col-md-6 text-md-end">
                                        @{
                                            string nombreMunicipio = "N/A";
                                            if (municipioNombres != null && municipioNombres.ContainsKey(item.MunicipioId))
                                            {
                                                nombreMunicipio = municipioNombres[item.MunicipioId];
                                            }
                                        }
                                        <p class="mb-1"><strong><i class="fas fa-map-marker-alt"></i> Municipio:</strong> @nombreMunicipio</p>
                                    </div>
                                </div>

                                <p class="lead flex-grow-1">
                                    @if (item.Descripcion.Length > 200)
                                    {
                                        @(item.Descripcion.Substring(0, 200) + "...")
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.Descripcion)
                                    }
                                </p>

                                <div class="mt-auto d-flex justify-content-between align-items-center pt-3 border-top">
                                    <span class="badge bg-@GetBadgeClass(item.Tipo) badge-aviso">
                                        @Html.DisplayFor(modelItem => item.Tipo)
                                    </span>
                                    <a asp-controller="Aviso" asp-action="Public" asp-route-id="@item.Id_aviso" class="btn btn-sm btn-primary">
                                        Ver Detalles <i class="fas fa-arrow-right"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                        itemIndex++;
                    }
                }
            </div>

            <button class="carousel-control-prev" type="button" data-bs-target="#avisoCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Anterior</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#avisoCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Siguiente</span>
            </button>

        </div>
    }
    else
    {
        <div class="alert alert-info text-center mt-4" role="alert">
            <h4>No hay avisos de interés público registrados</h4>
            <p>Por favor, consulte nuestra sección de noticias para más información.</p>
        </div>
    }

</div>

@section Scripts {
}